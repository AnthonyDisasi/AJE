// <auto-generated />
using System;
using AJE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AJE.Migrations
{
    [DbContext(typeof(AppDbContextEcole))]
    [Migration("20201012144414_4")]
    partial class _4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AJE.Models.Bulletin", b =>
                {
                    b.Property<int>("BulletinID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BulletinID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AnneeScolaire");

                    b.Property<string>("Application");

                    b.Property<string>("Mention");

                    b.Property<double>("Pourcentage");

                    b.HasKey("BulletinID");

                    b.ToTable("Bulletins");
                });

            modelBuilder.Entity("AJE.Models.Categorie", b =>
                {
                    b.Property<int>("CategorieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategorieID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("CategorieID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AJE.Models.Classe", b =>
                {
                    b.Property<int>("ClasseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClasseID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EcoleID");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("Option")
                        .IsRequired();

                    b.Property<string>("Section")
                        .IsRequired();

                    b.HasKey("ClasseID");

                    b.HasIndex("EcoleID");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("AJE.Models.Cours", b =>
                {
                    b.Property<int>("CoursID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CoursID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categorie")
                        .IsRequired();

                    b.Property<int?>("ClasseID");

                    b.Property<string>("Intituler")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("Volume")
                        .HasMaxLength(20);

                    b.HasKey("CoursID");

                    b.HasIndex("ClasseID");

                    b.ToTable("Cours");
                });

            modelBuilder.Entity("AJE.Models.Echange", b =>
                {
                    b.Property<int>("EchangeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EchangeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cote");

                    b.Property<int>("InspecteurID");

                    b.Property<int>("JournalID");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("EchangeID");

                    b.HasIndex("InspecteurID");

                    b.HasIndex("JournalID");

                    b.ToTable("Echanges");
                });

            modelBuilder.Entity("AJE.Models.Ecole", b =>
                {
                    b.Property<int>("EcoleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(55);

                    b.Property<DateTime>("DateCreation");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("PrefetID");

                    b.Property<string>("SousDivision")
                        .IsRequired();

                    b.HasKey("EcoleID");

                    b.HasIndex("PrefetID")
                        .IsUnique();

                    b.ToTable("Ecoles");
                });

            modelBuilder.Entity("AJE.Models.Eleve", b =>
                {
                    b.Property<int>("EleveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EleveID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateNaissance");

                    b.Property<int>("Genre");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Postnom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("EleveID");

                    b.ToTable("Eleves");
                });

            modelBuilder.Entity("AJE.Models.Epreuve", b =>
                {
                    b.Property<int>("EpreuveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EpreuveID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BulletinID");

                    b.Property<int>("CoursID");

                    b.Property<DateTime>("DateEpreuve");

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<int>("EleveID");

                    b.Property<int>("Periode");

                    b.Property<int>("Total");

                    b.Property<double>("point");

                    b.HasKey("EpreuveID");

                    b.HasIndex("BulletinID");

                    b.HasIndex("CoursID");

                    b.HasIndex("EleveID");

                    b.ToTable("Epreuves");
                });

            modelBuilder.Entity("AJE.Models.Inscription", b =>
                {
                    b.Property<int>("InscriptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InscriptionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AnneeScolaire");

                    b.Property<int>("ClasseID");

                    b.Property<int>("EleveID");

                    b.HasKey("InscriptionID");

                    b.HasIndex("ClasseID");

                    b.HasIndex("EleveID");

                    b.ToTable("Inscriptions");
                });

            modelBuilder.Entity("AJE.Models.Inspecteur", b =>
                {
                    b.Property<int>("InspecteurID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspecteurID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateNaissance");

                    b.Property<int>("Genre");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Postnom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("InspecteurID");

                    b.ToTable("Inspecteurs");
                });

            modelBuilder.Entity("AJE.Models.Journal", b =>
                {
                    b.Property<int>("JournalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JournalID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LeconID");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasMaxLength(55);

                    b.HasKey("JournalID");

                    b.HasIndex("LeconID");

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("AJE.Models.Lecon", b =>
                {
                    b.Property<int>("LeconID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LeconID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CoursID");

                    b.Property<DateTime>("DateLecon");

                    b.Property<string>("Description")
                        .HasMaxLength(55);

                    b.Property<DateTime>("Duree");

                    b.Property<int>("ProfesseurID");

                    b.HasKey("LeconID");

                    b.HasIndex("CoursID");

                    b.HasIndex("ProfesseurID");

                    b.ToTable("Lecons");
                });

            modelBuilder.Entity("AJE.Models.Option", b =>
                {
                    b.Property<int>("OptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OptionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("OptionID");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("AJE.Models.Prefet", b =>
                {
                    b.Property<int>("PrefetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateNaissance");

                    b.Property<int>("Genre");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Postnom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("PrefetID");

                    b.ToTable("Prefets");
                });

            modelBuilder.Entity("AJE.Models.Professeur", b =>
                {
                    b.Property<int>("ProfesseurID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProfesseurID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateNaissance");

                    b.Property<int>("Genre");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Postnom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("ProfesseurID");

                    b.ToTable("Professeurs");
                });

            modelBuilder.Entity("AJE.Models.Ressource", b =>
                {
                    b.Property<int>("RessourceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RessourceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(55);

                    b.Property<int>("EchangeID");

                    b.Property<string>("PathRessource");

                    b.HasKey("RessourceID");

                    b.HasIndex("EchangeID");

                    b.ToTable("Ressources");
                });

            modelBuilder.Entity("AJE.Models.Section", b =>
                {
                    b.Property<int>("SectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SectionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("SectionID");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("AJE.Models.SousDivision", b =>
                {
                    b.Property<int>("SousDivisionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SousDivisionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("SousDivisionID");

                    b.ToTable("SousDivisions");
                });

            modelBuilder.Entity("AJE.Models.Classe", b =>
                {
                    b.HasOne("AJE.Models.Ecole", "Ecole")
                        .WithMany("Classes")
                        .HasForeignKey("EcoleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AJE.Models.Cours", b =>
                {
                    b.HasOne("AJE.Models.Classe", "Classe")
                        .WithMany("Cours")
                        .HasForeignKey("ClasseID");
                });

            modelBuilder.Entity("AJE.Models.Echange", b =>
                {
                    b.HasOne("AJE.Models.Inspecteur", "Inspecteur")
                        .WithMany("Echanges")
                        .HasForeignKey("InspecteurID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AJE.Models.Journal", "Journal")
                        .WithMany()
                        .HasForeignKey("JournalID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AJE.Models.Ecole", b =>
                {
                    b.HasOne("AJE.Models.Prefet", "Prefet")
                        .WithOne("Ecole")
                        .HasForeignKey("AJE.Models.Ecole", "PrefetID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AJE.Models.Epreuve", b =>
                {
                    b.HasOne("AJE.Models.Bulletin", "Bulletin")
                        .WithMany("Epreuves")
                        .HasForeignKey("BulletinID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AJE.Models.Cours", "Cours")
                        .WithMany("Epreuves")
                        .HasForeignKey("CoursID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AJE.Models.Eleve", "Eleve")
                        .WithMany("Epreuves")
                        .HasForeignKey("EleveID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AJE.Models.Inscription", b =>
                {
                    b.HasOne("AJE.Models.Classe", "Classe")
                        .WithMany("Inscriptions")
                        .HasForeignKey("ClasseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AJE.Models.Eleve", "Eleve")
                        .WithMany("Inscriptions")
                        .HasForeignKey("EleveID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AJE.Models.Journal", b =>
                {
                    b.HasOne("AJE.Models.Lecon")
                        .WithMany("Journals")
                        .HasForeignKey("LeconID");
                });

            modelBuilder.Entity("AJE.Models.Lecon", b =>
                {
                    b.HasOne("AJE.Models.Cours")
                        .WithMany("Lecons")
                        .HasForeignKey("CoursID");

                    b.HasOne("AJE.Models.Professeur", "Professeur")
                        .WithMany("Lecons")
                        .HasForeignKey("ProfesseurID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AJE.Models.Ressource", b =>
                {
                    b.HasOne("AJE.Models.Echange", "Echange")
                        .WithMany("Ressources")
                        .HasForeignKey("EchangeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
